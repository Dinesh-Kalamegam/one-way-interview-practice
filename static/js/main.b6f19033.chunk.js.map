{"version":3,"sources":["components/LandingPage.js","components/QuestionPage.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["LandingPage","QuestionPage","questions","require","useState","questionAsked","setQuestionAsked","userTimeLimit","setUserTimeLimit","userCountDown","setUserCountDown","className","countdownTime","timeLimit","showReplayControls","onClick","e","parseInt","target","value","defaultValue","Object","entries","map","k","v","q","Footer","href","App","exact","path","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6pKAUeA,I,6CC0DAC,MA7Df,WACE,IAAMC,EAAYC,EAAQ,IAC1B,EAA0CC,mBAAS,0BAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEA,EAA0CF,mBAAS,KAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA0CJ,mBAAS,KAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KAEA,OACE,0BAASC,UAAU,eAAnB,UAEE,qBAAKA,UAAU,sBAAf,SACE,oCAAQN,EAAR,SAGF,sBAAKM,UAAU,gBAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,cAAC,IAAD,CACEC,cAAeH,EACfI,UAAWN,EACXO,oBAAoB,IAEtB,yBAAQH,UAAU,mBAAmBI,QAAS,SAAAC,GAAC,OAAIR,EAAiBS,SAASD,EAAEE,OAAOC,SAAtF,UACE,wBAAQA,MAAM,QAAd,oCACA,wBAAQA,MAAM,QAAd,oCACA,wBAAQA,MAAM,QAAd,kCACA,wBAAQA,MAAM,SAAd,mCACA,wBAAQC,cAAY,EAACD,MAAM,SAA3B,sCAGF,yBAAQR,UAAU,mBAAmBI,QAAS,SAAAC,GAAC,OAAIN,EAAiBO,SAASD,EAAEE,OAAOC,SAAtF,UACE,wBAAQC,cAAY,EAACD,MAAM,OAA3B,kCACA,wBAAQA,MAAM,QAAd,mCACA,wBAAQA,MAAM,QAAd,mCACA,wBAAQA,MAAM,QAAd,iCACA,wBAAQA,MAAM,SAAd,kCACA,wBAAQA,MAAM,SAAd,wCAIJ,eAAC,IAAD,CAAMR,UAAU,0BAAhB,UACA,cAAC,IAAD,UAEIU,OAAOC,QAAQpB,GAAWqB,KAAI,mCAAEC,EAAF,iBAC5B,cAAC,IAAD,UAAMA,SAKVH,OAAOC,QAAQpB,GAAWqB,KAAI,mCAAKE,GAAL,kBAC5B,cAAC,IAAD,UACGA,EAAEF,KAAI,SAAAG,GAAC,OAAK,wBAAQf,UAAU,4BAA4BQ,MAAOO,EAAGX,QAAS,SAAAC,GAAC,OAAIV,EAAiBU,EAAEE,OAAOC,QAAhG,SAAyGO,sB,MC/CrHC,MARf,WACI,OACI,wBAAQhB,UAAU,SAAlB,SACI,mBAAGiB,KAAK,qCAAR,0CCyBGC,MAtBf,WACE,OACE,qBAAKlB,UAAU,MAAf,SACE,eAAC,IAAD,WAEE,sBAAKA,UAAU,cAAf,UAEE,cAAC,IAAD,CAAOmB,OAAK,EAACC,KAAMC,+BAAnB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAMC,uCAAnB,SACE,cAAC,EAAD,SAIJ,cAAC,EAAD,UCZOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b6f19033.chunk.js","sourcesContent":["import React from 'react'\nimport LandingPageHero from './LandingPageComponents/LandingPageHero';\nfunction LandingPage() {\n    return (\n        <React.Fragment>\n            <LandingPageHero/>\n        </React.Fragment>\n    )\n}\n\nexport default LandingPage\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport VideoRecorder from 'react-video-recorder'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport './react-tabs.scss';\nimport './QuestionPage.scss';\n\nfunction QuestionPage() {\n  const questions = require(\"../questions.json\")\n  const [questionAsked, setQuestionAsked] = useState(\"Tell Me About Yourself\")\n\n  const [userTimeLimit, setUserTimeLimit] = useState(30000)\n  const [userCountDown, setUserCountDown] = useState(3000)\n\n  return (\n    <section className=\"QuestionPage\" >\n\n      <div className=\"question-title-area\">\n        <h2 >  {questionAsked} </h2>\n      </div>\n\n      <div className=\"question-area\" >\n        <div className=\"question-area-video\">\n          <VideoRecorder\n            countdownTime={userCountDown}\n            timeLimit={userTimeLimit}\n            showReplayControls={true}\n          />\n          <select className=\"recording-option\" onClick={e => setUserTimeLimit(parseInt(e.target.value))}>\n            <option value=\"10000\">Time Limit: 10 seconds</option>\n            <option value=\"30000\">Time Limit: 30 seconds</option>\n            <option value=\"60000\">Time Limit: 1 minute</option>\n            <option value=\"120000\">Time Limit: 2 minutes</option>\n            <option defaultValue value=\"180000\">Time Limit: 3 minutes</option>\n          </select>\n\n          <select className=\"recording-option\" onClick={e => setUserCountDown(parseInt(e.target.value))}>\n            <option defaultValue value=\"3000\">Countdown: 3 seconds</option>\n            <option value=\"10000\">Countdown: 10 seconds</option>\n            <option value=\"30000\">Countdown: 30 seconds</option>\n            <option value=\"60000\">Countdown: 1 minute</option>\n            <option value=\"120000\">Countdown: 2 minutes</option>\n            <option value=\"180000\">Countdown: 3 minutes</option>\n          </select>\n        </div>\n\n        <Tabs className=\"question-area-selection\" >\n        <TabList>\n          {\n            Object.entries(questions).map(([k, v]) => (\n              <Tab>{k}</Tab>\n            ))\n          }\n        </TabList>\n        {\n          Object.entries(questions).map(([k, v]) => (\n            <TabPanel >\n              {v.map(q => (<button className=\"question-selection-button\" value={q} onClick={e => setQuestionAsked(e.target.value)}>{q}</button>))}\n            </TabPanel>\n          ))\n        }\n      </Tabs>\n      </div>\n\n    </section>\n  );\n}\n\nexport default QuestionPage;\n","import React from 'react'\nimport './Footer.scss'\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <a href=\"http://dinesh-kalamegam.github.io/\">Made By Dinesh Kalamegam </a>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport './App.scss';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Nav from './components/Nav'\nimport LandingPage from './components/LandingPage';\nimport QuestionPage from './components/QuestionPage';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router >\n        {/* <Nav /> */}\n        <div className=\"app-content\">\n\n          <Route exact path={process.env.PUBLIC_URL + \"/\"}>\n            <QuestionPage />\n          </Route>\n\n          <Route exact path={process.env.PUBLIC_URL + \"/question\"}>\n            <QuestionPage />\n          </Route>\n\n        </div>\n        <Footer />\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}