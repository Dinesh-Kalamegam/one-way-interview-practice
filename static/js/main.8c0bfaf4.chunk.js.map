{"version":3,"sources":["components/QuestionPage.js","components/HomeHero.js","components/HowWorksCard.js","components/HomeHowWorks.js","App.js","reportWebVitals.js","index.js"],"names":["QuestionPage","props","useState","userTimeLimit","setUserTimeLimit","userCountDown","setUserCountDown","Fragment","className","to","process","question","countdownTime","timeLimit","showReplayControls","onClick","e","parseInt","target","value","defaultValue","HomeHero","src","HowWorksCard","svg_filepath","text","HomeHowWorks","App","questions","require","exact","path","allowMultipleExpanded","allowZeroExpanded","Object","entries","map","k","v","x","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c0bfaf4.chunk.js","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport './QuestionPage.scss';\nimport VideoRecorder from 'react-video-recorder'\nimport { Link } from 'react-router-dom'\n\nfunction QuestionPage(props) {\n  const [userTimeLimit, setUserTimeLimit] = useState(30000)\n  const [userCountDown, setUserCountDown] = useState(3000)\n\n  return (\n    <React.Fragment>\n      <h2 className=\"question-title\">\n        <Link className=\"go-back-arrow\" to={process.env.PUBLIC_URL + \"/\"}></Link>\n        {props.question}\n      </h2>\n\n      <div className=\"QuestionPage\">\n        <div className=\"video-container\">\n          <VideoRecorder\n            countdownTime={userCountDown}\n            timeLimit={userTimeLimit}\n            showReplayControls={true}\n          />\n          <select className=\"selection-option\" onClick={e => setUserTimeLimit(parseInt(e.target.value))}>\n            <option value=\"10000\">Time Limit: 10 seconds</option>\n            <option value=\"30000\">Time Limit: 30 seconds</option>\n            <option value=\"60000\">Time Limit: 1 minute</option>\n            <option value=\"120000\">Time Limit: 2 minutes</option>\n            <option defaultValue value=\"180000\">Time Limit: 3 minutes</option>\n          </select>\n\n          <select className=\"selection-option\" onClick={e => setUserCountDown(parseInt(e.target.value))}>\n            <option defaultValue value=\"3000\">Countdown: 3 seconds</option>\n            <option value=\"10000\">Countdown: 10 seconds</option>\n            <option value=\"30000\">Countdown: 30 seconds</option>\n            <option value=\"60000\">Countdown: 1 minute</option>\n            <option value=\"120000\">Countdown: 2 minutes</option>\n            <option value=\"180000\">Countdown: 3 minutes</option>\n          </select>\n        </div>\n\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default QuestionPage;\n","import React from 'react'\nimport './HomeHero.scss'\n\nfunction HomeHero() {\n    return (\n        <div className=\"hero-row\">\n        <div className=\"hero-row-left\">\n          <h1>Practice For Your <br/><span className=\"hero-keyword\">HireVue</span> </h1>\n        </div>\n        <img className=\"hero-image\" src={process.env.PUBLIC_URL+\"/assets/images/hero_image.svg\"}/>\n      </div>\n    )\n}\n\nexport default HomeHero\n","import React from 'react'\nimport './HowWorksCard.scss'\n\nfunction HowWorksCard(props) {\n    return (\n        <div className=\"howworks-card\">\n            <img className=\"howworks-img\" src={process.env.PUBLIC_URL+\"/assets/images/how_it_works/\"+props.svg_filepath}/>\n            <p className=\"howworks-text\">{props.text}</p>\n        </div>\n    )\n}\n\nexport default HowWorksCard\n","import React from 'react'\nimport HowWorksCard from './HowWorksCard'\nimport './HomeHowWorks.scss'\n\nfunction HomeHowWorks() {\n    return (\n        <div className=\"home-howworks\">\n            <HowWorksCard \n                svg_filepath=\"selection.svg\" \n                text=\"(1) Choose a question from the lists below\"\n            />\n            <HowWorksCard \n                svg_filepath=\"preferences_popup.svg\" \n                text=\"(2) Allow the browser and website permission to use the camera and microphone\"\n            />\n            <HowWorksCard \n                svg_filepath=\"adjustments.svg\" \n                text=\"(3) Set how long you want the preparation countdown and recording time allowed\"\n            />\n            <HowWorksCard \n                svg_filepath=\"recording.svg\" \n                text=\"(4) Then you're good to go! Record and instantly playback your response as many times as you want\"\n            />\n        </div>\n    )\n}\n\nexport default HomeHowWorks\n","import React from 'react'\nimport './App.scss';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport QuestionPage from './components/QuestionPage';\nimport HomeHero from './components/HomeHero';\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n  AccordionItemState\n} from 'react-accessible-accordion';\n\n// Demo styles, see 'Styles' section below for some notes on use.\n// import 'react-accessible-accordion/dist/fancy-example.css';\nimport './components/AccordionStyle.scss'\nimport HomeHowWorks from './components/HomeHowWorks';\n\nfunction App() {\n  const questions = require(\"./questions.json\")\n  const general = questions[\"General\"]\n\n  // Object.entries(questions).map(([k,v])=>console.log(k,v))\n  return (\n    <div className=\"App\">\n      <div className=\"questions\">\n        <Router >\n\n          <Route exact path={process.env.PUBLIC_URL + \"/\"}>\n            {/* Hero Row of the Homepage */}\n            <HomeHero />\n\n            <h2>How it works</h2>\n            <HomeHowWorks/>\n            <h2>Check the questions here</h2>\n            {/* The Question and Links */}\n            <Accordion allowMultipleExpanded allowZeroExpanded >\n              {\n                Object.entries(questions).map(([k, v]) => (\n                  <AccordionItem key={k}>\n                    <AccordionItemHeading>\n                      <AccordionItemButton>\n                        {k}\n                        {/* <AccordionItemState>\n                            {({ expanded }) => (expanded ? 'expanded' : 'collapsed')}\n                        </AccordionItemState> */}\n\n                      </AccordionItemButton>\n                    </AccordionItemHeading>\n                    {\n                      v.map((x, index) =>\n                          <Link className=\"question-link\" key={index} to={process.env.PUBLIC_URL + \"/\" + k + \"/\" + index}>\n                          <AccordionItemPanel key={index}>\n                            <p >({index}) {x}</p>\n                          </AccordionItemPanel>\n                          </Link>\n                      )\n                    }\n                  </AccordionItem>\n                ))\n              }\n            </Accordion>\n          </Route>\n\n          {/* Generate All the Pages here */}\n          {\n            Object.entries(questions).map(([k, v]) => (\n              v.map((x, index) =>\n                <Route key={index} exact path={process.env.PUBLIC_URL + \"/\" + k + \"/\" + index}>\n                  <QuestionPage key={index} question={x} />\n                </Route>\n              )\n            ))\n\n          }\n\n\n        </Router>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}