{"version":3,"sources":["components/stop-button.js","components/QuestionPage.js","App.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","props","backgroundColor","color","div","defaultProps","QuestionPage","questions","require","useState","questionAsked","setQuestionAsked","userTimeLimit","setUserTimeLimit","userCountDown","setUserCountDown","useModal","modalProps","getTriggerProps","Fragment","className","countdownTime","timeLimit","showReplayControls","onClick","e","parseInt","target","value","defaultValue","selected","placeholder","label","type","Object","keys","map","k","values","v","ind","q","qInd","App","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f433b11f.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n  background: ${(props) => props.backgroundColor};\n  color: ${(props) => props.color};\n  border-radius: 4px;\n  width: 40px;\n  height: 40px;\n  background: rgba(17, 73, 28, 0.8);\n  outline: none;\n  border: none;\n  cursor: pointer;\n  margin: 20px;\n  :hover {\n    background: #fb6d42;\n  }\n`\n\nconst Border = styled.div`\n  background: rgba(255, 255, 255, 0.4);\n  height: 80px;\n  width: 80px;\n  border-radius: 50%;\n`\n\nButton.defaultProps = {\n  color: 'black',\n  backgroundColor: 'white'\n}\n\nexport default (props) => (\n  <Border>\n    <Button {...props} />\n  </Border>\n)","import React, { useState } from 'react'\nimport VideoRecorder from 'react-video-recorder'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport './react-tabs.scss';\nimport './QuestionPage.scss';\nimport { useModal, Modal } from 'react-morphing-modal';\nimport './react-modal-custom.scss';\nimport StopButton from './stop-button'\n\n\nfunction QuestionPage() {\n  const questions = require(\"../questions.json\")\n  const [questionAsked, setQuestionAsked] = useState(\"Tell Me About Yourself\")\n  const [userTimeLimit, setUserTimeLimit] = useState(30000)\n  const [userCountDown, setUserCountDown] = useState(3000)\n\n  const { modalProps, getTriggerProps } = useModal({\n  });\n\n  return (\n    <React.Fragment>\n      {/* <section className=\"header-section\">\n        <h1> One Way Interview Practice</h1>\n      </section> */}\n      <section className=\"QuestionPage\" >\n        <div className=\"question-area\" >\n          <div className=\"question-area-video question-page-section\">\n            <div className=\"question-title-area question-page-section\">\n              <h2 className=\"question\">  {questionAsked} </h2>\n              <button className=\"change-question\" {...getTriggerProps()}>Change Question</button>\n            </div>\n            <VideoRecorder\n              countdownTime={userCountDown}\n              timeLimit={userTimeLimit}\n              showReplayControls={true}\n            />\n            <div className=\"recording-option-container\">\n              <select className=\"recording-option\" onClick={e => setUserTimeLimit(parseInt(e.target.value))}>\n                <option value=\"10000\">Time Limit: 10 seconds</option>\n                <option defaultValue  selected value=\"30000\">Time Limit: 30 seconds</option>\n                <option value=\"60000\">Time Limit: 1 minute</option>\n                <option value=\"120000\">Time Limit: 2 minutes</option>\n                <option  value=\"180000\">Time Limit: 3 minutes</option>\n              </select>\n\n              <select className=\"recording-option\" onClick={e => setUserCountDown(parseInt(e.target.value))}>\n                <option defaultValue value=\"3000\">Countdown: 3 seconds</option>\n                <option value=\"10000\">Countdown: 10 seconds</option>\n                <option value=\"30000\">Countdown: 30 seconds</option>\n                <option value=\"60000\">Countdown: 1 minute</option>\n                <option value=\"120000\">Countdown: 2 minutes</option>\n                <option value=\"180000\">Countdown: 3 minutes</option>\n              </select>\n\n            </div>\n          </div>\n\n          <div className=\"question-area-notes question-page-section\">\n            <p>Some Space to gather your thoughts</p>\n            <textarea placeholder=\"click here and start typing\" label=\"notes\" className=\"question-area-notes-input\" type=\"text\"></textarea>\n\n          </div>\n        </div>\n\n        <Modal className=\"question-selection-modal\" {...modalProps}>\n          <Tabs>\n            <div><p className=\"current-question\">CURRENT QUESTION :  {questionAsked} </p> </div>\n            <TabList>\n              {\n                Object.keys(questions).map(k => (\n                  <Tab key={k}>{k}</Tab>\n                ))\n              }\n            </TabList>\n            {\n              Object.values(questions).map((v, ind) => (\n                <TabPanel className=\"question-area-selection-panel\" key={ind} >\n                  {v.map((q, qInd) => (<button key={qInd} className=\"question-selection-button\" value={q} onClick={e => setQuestionAsked(e.target.value)}>{q}</button>))}\n\n                </TabPanel>\n              ))\n            }\n          </Tabs>\n        </Modal>\n\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default QuestionPage;\n","import React from 'react'\nimport './App.scss';\nimport QuestionPage from './components/QuestionPage';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1> One Way Interview Practice</h1>\n        <a href=\"https://github.com/Dinesh-Kalamegam/one-way-interview-practice\" target=\"_blank\"> See Repo</a>\n      </header>\n\n        <div className=\"app-content\">\n            <QuestionPage />\n        </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}