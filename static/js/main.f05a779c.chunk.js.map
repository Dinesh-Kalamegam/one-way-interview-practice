{"version":3,"sources":["components/QuestionPage.js","App.js","reportWebVitals.js","index.js"],"names":["QuestionPage","props","useState","userTimeLimit","setUserTimeLimit","userCountDown","setUserCountDown","className","countdownTime","timeLimit","showReplayControls","to","question","value","onClick","e","target","App","general","require","exact","path","process","map","x","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0yEAgDeA,MA1Cf,SAAsBC,GACpB,MAA0CC,mBAAS,KAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA0CF,mBAAS,KAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAEA,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,IAAD,CACEC,cAAeH,EACfI,UAAWN,EACXO,oBAAoB,MAIxB,sBAAKH,UAAU,oBAAf,UACE,cAAC,IAAD,CAAMI,GAAG,IAAT,qBACA,0CACA,4BAAIV,EAAMW,WAEV,0CAEA,gEACA,wBAAQC,MAAO,IAAMC,QAAS,SAAAC,GAAC,OAAIX,EAAiBW,EAAEC,OAAOH,QAA7D,gBACA,wBAAQA,MAAO,IAAMC,QAAS,SAAAC,GAAC,OAAIX,EAAiBW,EAAEC,OAAOH,QAA7D,gBACA,wBAAQA,MAAO,IAAMC,QAAS,SAAAC,GAAC,OAAIX,EAAiBW,EAAEC,OAAOH,QAA7D,gBACA,wBAAQA,MAAO,IAAOC,QAAS,SAAAC,GAAC,OAAIX,EAAiBW,EAAEC,OAAOH,QAA9D,iBACA,wBAAQA,MAAO,KAAOC,QAAS,SAAAC,GAAC,OAAIX,EAAiBW,EAAEC,OAAOH,QAA9D,iBACA,wBAAQA,MAAO,KAAOC,QAAS,SAAAC,GAAC,OAAIX,EAAiBW,EAAEC,OAAOH,QAA9D,iBAEA,qEAEA,wBAAQA,MAAO,IAAMC,QAAS,SAAAC,GAAC,OAAIT,EAAiBS,EAAEC,OAAOH,QAA7D,gBACA,wBAAQA,MAAO,IAAMC,QAAS,SAAAC,GAAC,OAAIT,EAAiBS,EAAEC,OAAOH,QAA7D,gBACA,wBAAQA,MAAO,IAAMC,QAAS,SAAAC,GAAC,OAAIT,EAAiBS,EAAEC,OAAOH,QAA7D,gBACA,wBAAQA,MAAO,IAAOC,QAAS,SAAAC,GAAC,OAAIT,EAAiBS,EAAEC,OAAOH,QAA9D,iBACA,wBAAQA,MAAO,KAAOC,QAAS,SAAAC,GAAC,OAAIT,EAAiBS,EAAEC,OAAOH,QAA9D,iBACA,wBAAQA,MAAO,KAAOC,QAAS,SAAAC,GAAC,OAAIT,EAAiBS,EAAEC,OAAOH,QAA9D,wBCROI,MA7Bf,WACE,IACMC,EADYC,EAAQ,IACD,QACzB,OACE,qBAAKZ,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOa,OAAK,EAACC,KAAMC,+BAAnB,UACA,oBAAIf,UAAU,QAAd,yCACA,oBAAIA,UAAU,gBAAd,+BACGW,EAAQK,KAAI,SAACC,EAAEC,GAAH,OACT,cAAC,IAAD,CAAiBd,GAAIW,+BAA2BG,EAAhD,SACE,oBAAGlB,UAAU,gBAAb,cAA+BkB,EAA/B,KAAwCD,MAD/BC,SAMlBP,EAAQK,KAAI,SAACC,EAAEC,GAAH,OACX,cAAC,IAAD,CAAmBL,OAAK,EAACC,KAAMC,+BAA2BG,EAA1D,SACE,cAAC,EAAD,CAA2Bb,SAAUY,GAAjBC,IADVA,cCXPC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f05a779c.chunk.js","sourcesContent":["import React from 'react'\nimport {useState } from 'react'\nimport './QuestionPage.scss';\nimport VideoRecorder from 'react-video-recorder'\nimport {Link} from 'react-router-dom'\n\nfunction QuestionPage(props) {\n  const [userTimeLimit, setUserTimeLimit] = useState(3000)\n  const [userCountDown, setUserCountDown] = useState(3000)\n\n  return (\n    <div className=\"QuestionPage\">\n      <div className=\"video-container\">\n        <VideoRecorder\n          countdownTime={userCountDown}\n          timeLimit={userTimeLimit}\n          showReplayControls={true}\n        />\n      </div>\n\n      <div className=\"options-container\">\n        <Link to=\"/\">GO BACK</Link>\n        <h2>Question</h2>\n        <p>{props.question}</p>\n\n        <h3> Options</h3>\n\n        <p>Set the Time Limit of an answer</p>\n        <button value={2000} onClick={e => setUserTimeLimit(e.target.value)}>2s</button>\n        <button value={3000} onClick={e => setUserTimeLimit(e.target.value)}>3s</button>\n        <button value={5000} onClick={e => setUserTimeLimit(e.target.value)}>5s</button>\n        <button value={10000} onClick={e => setUserTimeLimit(e.target.value)}>10s</button>\n        <button value={15000} onClick={e => setUserTimeLimit(e.target.value)}>15s</button>\n        <button value={25000} onClick={e => setUserTimeLimit(e.target.value)}>25s</button>\n\n        <p> Set the Countdown before recording </p>\n\n        <button value={2000} onClick={e => setUserCountDown(e.target.value)}>2s</button>\n        <button value={3000} onClick={e => setUserCountDown(e.target.value)}>3s</button>\n        <button value={5000} onClick={e => setUserCountDown(e.target.value)}>5s</button>\n        <button value={10000} onClick={e => setUserCountDown(e.target.value)}>10s</button>\n        <button value={15000} onClick={e => setUserCountDown(e.target.value)}>15s</button>\n        <button value={25000} onClick={e => setUserCountDown(e.target.value)}>25s</button>\n      </div>\n    </div>\n  );\n}\n\nexport default QuestionPage;\n","import React from 'react'\nimport './App.scss';\nimport { BrowserRouter as Router, Route,Link } from 'react-router-dom';\nimport QuestionPage from './components/QuestionPage';\n\nfunction App() {\n  const questions = require(\"./questions.json\")\n  const general = questions[\"general\"]\n  return(\n    <div className=\"App\">\n      <div className=\"questions\">\n        <Router>\n          <Route exact path={process.env.PUBLIC_URL+\"/\"}>\n          <h1 className=\"title\"> One Way Interview Practice</h1>\n          <h2 className=\"question-type\">General Questions</h2>\n            {general.map((x,index)=>\n                <Link key={index}to={process.env.PUBLIC_URL+\"/\"+index}>\n                  <p className=\"question-link\">({index}) {x}</p>\n                </Link>\n              )}\n          </Route>\n        \n        {general.map((x,index)=>\n          <Route key={index} exact path={process.env.PUBLIC_URL+\"/\"+index}>\n            <QuestionPage key ={index} question={x}/>\n          </Route>\n        )}\n\n      </Router>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}